{"version":3,"sources":["images/cryptoKnight.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Homepage.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","images/cryptos1.jpg","images/cryptoAvatar.jpg","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","cryptoKnight","size","Title","level","to","onClick","MenuOutlined","theme","Item","icon","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getCryptoExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetCryptoExchangesQuery","Loader","Homepage","data","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","gutter","map","currency","xs","sm","lg","id","rank","extra","iconUrl","hoverable","price","marketCap","change","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","marketShare","cryptoNewsApiHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","demoImage","alt","substring","provider","demoImage2","italic","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.c495f345.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptoKnight.05bdae33.png\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\n\nimport cryptoKnight from \"../images/cryptoKnight.png\";\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize < 768) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n      <Avatar src={cryptoKnight} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\" > Crypto Knight</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => {activeMenu ? setActiveMenu(false): setActiveMenu(true)}}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\" >Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\" >Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />}>\n            <Link to=\"/exchanges\" >Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to=\"/news\" >News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n    'x-rapidapi-key': '79419e7059mshe8463e19c9851aap12a31cjsn5c506c7acfe2'\n};\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\nexport const cryptoApi = createApi({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptos: builder.query({\n            query: (count) => createRequest(`/coins?limit=${count}`)\n        }),\n        getCryptoDetails:builder.query({\n            query:(coinId) => createRequest(`/coin/${coinId}`)\n        }),\n        getCryptoHistory:builder.query({\n            query:({coinId, timePeriod}) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\n        }),\n        getCryptoExchanges:builder.query({\n            query:() => createRequest(`/exchanges`)\n        })\n    })\n});\n\nexport const {\n    useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery, useGetCryptoExchangesQuery\n} = cryptoApi;","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <Spin />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport millify from \"millify\";\n\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport {Cryptocurrencies, News } from '../components';\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\n\nimport Loader from \"./Loader\";\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n  \n  if (isFetching) return <Loader />;\n  return (\n    <>\n      <Typography.Title level={2} className=\"heading\">\n        Global Crypto Stats\n      </Typography.Title>\n      <Row>\n        <Col span={12}>\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\n          <Statistic\n            title=\"Total Exchanges\"\n            value={millify(globalStats.totalExchanges)}\n          />\n          <Statistic\n            title=\"Total Market Cap\"\n            value={millify(globalStats.totalMarketCap)}\n          />\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={millify(globalStats.total24hVolume)}\n          />\n          <Statistic\n            title=\"Total Markets\"\n            value={millify(globalStats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Typography.Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies\n        </Typography.Title>\n        <Typography.Title level={3} className=\"show-more\">\n          <Link to=\"/cryptocurrencies\">Show More</Link>\n        </Typography.Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Typography.Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Typography.Title>\n        <Typography.Title level={3} className=\"show-more\">\n          <Link to=\"/news\">Show More</Link>\n        </Typography.Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n  if (isFetching) return <Loader />;\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}.${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {millify(currency.change)}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\n\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../services/cryptoApi\";\n\n\nimport Loader from \"./Loader\";\nimport LineChart from \"./LineChart\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\"); //7 days\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\n    coinId,\n    timePeriod,\n  });\n  const cryptoDetails = data?.data?.coin;\n  if (isFetching) return <Loader />;\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails.name} ({cryptoDetails.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in US Dollar (USD). View value\n          statistics, market cap and supply.\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Timeperiod\"\n        onChange={(value) => setTimePeriod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>\n              An overview showing the statistics of {cryptoDetails.name}, such\n              as the base and quote currency, the rank, and trading volume.\n            </p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\"  >\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Statistics\n            </Title>\n            <p>An overview showing the statistics of all cryptocurrencies.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\" >\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}?\n          </Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n          </Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">\n                {link.type}\n              </Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\n\nimport { useGetCryptoExchangesQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetCryptoExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n  if (isFetching) return <Loader />;\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                 ( <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{exchange.rank}.</strong>\n                      </Text>\n                      <Avatar\n                        className=\"exchange-image\"\n                        src={exchange.iconUrl}\n                      />\n                       <Text>\n                        <strong>{exchange.name}.</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>)\n        }\n              >{HTMLReactParser(exchange.description || '')}</Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoNewsApiHeaders = {\n    'x-bingapis-sdk': 'true',\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\n    'x-rapidapi-key': '79419e7059mshe8463e19c9851aap12a31cjsn5c506c7acfe2'\n};\n\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsApiHeaders })\nexport const cryptoNewsApi = createApi({\n    reducerPath: 'cryptoNewsApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptoNews: builder.query({\n            query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n        })\n    })\n});\n\nexport const {\n    useGetCryptoNewsQuery,\n} = cryptoNewsApi;","export default __webpack_public_path__ + \"static/media/cryptos1.71cc91a9.jpg\";","export default __webpack_public_path__ + \"static/media/cryptoAvatar.2069e705.jpg\";","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\n\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nimport demoImage from \"../images/cryptos1.jpg\";\nimport demoImage2 from \"../images/cryptoAvatar.jpg\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 12,\n  });\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(100);\n\n  if (!cryptoNews?.value) return <Loader />;\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n            {cryptosList?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\n                  alt=\"news\"\n                />\n              </div>\n              <Text type=\"secondary\">\n                {news.description > 100\n                  ? `${news.description.substring(0, 100)} ...`\n                  : news.description}\n              </Text>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImage2\n                    }\n                    alt=\"\"\n                  />\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text italic type=\"danger\">\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n// import { Typography, Space } from 'antd';\n\n// const { Text, Link } = Typography;\n\n// ReactDOM.render(\n//   <Space direction=\"vertical\">\n//     <Text>Ant Design (default)</Text>\n//     <Text type=\"secondary\">Ant Design (secondary)</Text>\n//     <Text type=\"success\">Ant Design (success)</Text>\n//     <Text type=\"warning\">Ant Design (warning)</Text>\n//     <Text type=\"danger\">Ant Design (danger)</Text>\n//     <Text disabled>Ant Design (disabled)</Text>\n//     <Text mark>Ant Design (mark)</Text>\n//     <Text code>Ant Design (code)</Text>\n//     <Text keyboard>Ant Design (keyboard)</Text>\n//     <Text underline>Ant Design (underline)</Text>\n//     <Text delete>Ant Design (delete)</Text>\n//     <Text strong>Ant Design (strong)</Text>\n//     <Text italic>Ant Design (italic)</Text>\n//     <Link href=\"https://ant.design\" target=\"_blank\">\n//       Ant Design (Link)\n//     </Link>\n//   </Space>,\n//   mountNode,\n// );\n\nexport default News;\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport {\n    Navbar,\n    Homepage,\n    Exchanges,\n    Cryptocurrencies,\n    CryptoDetails,\n    News,\n} from \"./components\";\n\nimport \"./App.css\";\n\nconst App = () => {\n    return (\n        <div className=\"app\">\n            <div className=\"navbar\">\n                {\" \"}\n                <Navbar />{\" \"}\n            </div>{\" \"}\n            <div className=\"main\">\n                {\" \"}\n                <Layout>\n                    <div className=\"routes\">\n                        {\" \"}\n                        <Switch>\n                            {\" \"}\n                            <Route exact path=\"/\">\n                                {\" \"}\n                                <Homepage />{\" \"}\n                            </Route>{\" \"}\n                            <Route exact path=\"/exchanges\">\n                                {\" \"}\n                                <Exchanges />{\" \"}\n                            </Route>{\" \"}\n                            <Route exact path=\"/cryptocurrencies\">\n                                {\" \"}\n                                <Cryptocurrencies />{\" \"}\n                            </Route>{\" \"}\n                            <Route exact path=\"/crypto/:coinId\">\n                                {\" \"}\n                                <CryptoDetails />{\" \"}\n                            </Route>{\" \"}\n                            <Route exact path=\"/news\">\n                                {\" \"}\n                                <News />{\" \"}\n                            </Route>{\" \"}\n                        </Switch>{\" \"}\n                    </div>{\" \"}\n                </Layout>{\" \"}\n                <div className=\"footer\">\n                    <Typography.Title\n                        level={5}\n                        style={{ color: \"white\", textAlign: \"center\" }}\n                    >\n                        Crypto Knight <br />\n                        All rights reserved{\" \"}\n                    </Typography.Title>{\" \"}\n                    <Space>\n                        <Link to=\"/\"> Home </Link> <Link to=\"/exchanges\"> Exchanges </Link>{\" \"}\n                        <Link to=\"/news\"> News </Link>\n                    </Space>\n                </div>{\" \"}\n            </div>{\" \"}\n        </div>\n    );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\nexport default configureStore({\n    reducer: {\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\n    },\n\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './app/store';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(< Router ><Provider store={store}> < App /></Provider> </Router>, document.getElementById('root'));"],"sourceRoot":""}